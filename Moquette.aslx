<!--Saved by Quest 5.5.4890.26461-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="tube.aslx" />
  <include ref="people.aslx" />
  <game name="Moquette">
    <gameid>ff2da758-286e-4c47-b6f2-eb26ba2f7591</gameid>
    <showpanes type="boolean">false</showpanes>
    <showcommandbar type="boolean">false</showcommandbar>
    <echocommand type="boolean">false</echocommand>
    <enablehyperlinks />
    <autodescription type="boolean">false</autodescription>
    <showlocation type="boolean">false</showlocation>
    <setcustomwidth />
    <customwidth type="int">650</customwidth>
    <underlinehyperlinks />
    <showborder type="boolean">false</showborder>
    <setcustompadding />
    <custompaddingtop type="int">60</custompaddingtop>
    <custompaddingbottom type="int">60</custompaddingbottom>
    <author>Alex Warren</author>
    <subtitle type="string"></subtitle>
    <showtitle />
    <command_newline />
    <start type="script"><![CDATA[
      foreach (station, GetDirectChildren(stationdata)) {
        if (not HasAttribute(station, "platforms")) {
          station.platforms = NewDictionary()
          foreach (line, GetDirectChildren(linedata)) {
            if (HasAttribute(station, line.code)) {
              for (direction, -1, 1, 2) {
                if (GetNextStation(station, direction, line.code) <> null) {
                  platformdata = NewDictionary()
                  lines = NewObjectList()
                  list add (lines, line)
                  dictionary add (platformdata, "lines", lines)
                  directions = NewStringDictionary()
                  dictionary add (directions, line.code, ToString(direction))
                  dictionary add (platformdata, "directions", directions)
                  dictionary add (station.platforms, GetPlatformName(line, direction), platformdata)
                }
              }
            }
          }
        }
        foreach (platformkey, station.platforms) {
          value = DictionaryItem(station.platforms, platformkey)
          dictionary add (value, "name", platformkey)
        }
      }
    ]]></start>
  </game>
  <object name="Act 0">
    <inherit name="editor_room" />
    <object name="Act 0 Balham">
      <inherit name="editor_room" />
      <description><![CDATA["Become who you want to be". Yes, I suppose I could jack in my job tomorrow and upload my CV. Where would that get me? I don't know who I want to be.<br/><br/>"London to Bournemouth from £9". You'll never get it that cheap. And who wants to go to Bournemouth?<br/><br/>"Why pay more for your car insurance?" Because I don't want to give you bastards your precious commission, you annoying attention-seeking twats.<br/><br/>"Malaria kills a child every 45 seconds". Texting you costs £3, and will that really help anything?<br/><br/>The {command:1:train now approaching}  is for all stations to Edgware.]]></description>
      <beforeenter type="script">
        JS.StartOutputSection ("intro")
      </beforeenter>
      <object name="player">
        <inherit name="editor_object" />
        <inherit name="editor_player" />
      </object>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Balham Train)
        </script>
      </command>
    </object>
    <object name="Act 0 Balham Train">
      <inherit name="editor_room" />
      <description><![CDATA[With a rush of cold air and a familiarly ear-shattering clatter, a train arrives.<br/><br/>{command:1:Get on}]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          JS.EndOutputSection ("intro")
          JS.HideOutputSection ("intro")
          JS.HideOutputSection ("title")
          SetTimeout (1) {
            ClearScreen
            JS.StartOutputSection ("act01")
            MoveObject (player, Act 0 Balham to Clapham South)
          }
        </script>
      </command>
    </object>
    <object name="Act 0 Balham to Clapham South">
      <inherit name="editor_room" />
      <description><![CDATA[Pretty full as usual. No expectation of a seat, so I barely look for one. Space over by the opposite door though.<br/><br/>No challenges here. Nothing to engage my conscious brain with. I just glide automatically to a pole and grab hold of it without a moment's thought. No decisions, no effort, no choice, no problem.<br/><br/>Auto-pilot. Almost a reflex action to the alarm clock, to get up, leave the flat, catch the tube to work. Ten stops to Bank, change to the Central line, one stop to Liverpool Street, turn left, up the escalator, left, through the barriers, right, up the stairs, up the ramp, past the huge big rusty metal sculpture thingy, into the office, and barely notice the whole thing.<br/><br/>And then I will sit at my desk, go home at the end of the day, heat up that other frozen pizza from the 2-for-1 offer, and go to bed having hardly troubled my synapses in 16 hours. Possibly the most exciting thing I will do today is go for a shit. Sneak off from my desk for 10 minutes of unscheduled me-time. Like a mini holiday.<br/><br/>The doors open. One person gets on.<br/><br/>This station is {command:1:Clapham South}.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Clapham South to Clapham Common)
        </script>
      </command>
    </object>
    <object name="Act 0 Clapham South to Clapham Common">
      <inherit name="editor_room" />
      <description><![CDATA[Beep-beep-beep-beep-beep.<br/><br/>The doors close. The train lurches onward.<br/><br/>Despite the clatter of the train, and the rocking motion, there is a peaceful stillness here. Many people in a small area, yet we are all alone. It is comfortable, in a strange way, even though I am standing up, having to hold on so I don't fall over the next time the train unexpectedly yanks left or right.<br/><br/>Like water droplets coming together and flowing through a pipe, the Tube carries us along, we are swept through from home to the office. It's automatic. Water starts at one place and ends up at the other, and so do we. We are packed together and become indistinguishable from a general flow.<br/><br/>This station is {command:1:Clapham Common}.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Clapham Common to Clapham North)
        </script>
      </command>
    </object>
    <object name="Act 0 Clapham Common to Clapham North">
      <inherit name="editor_room" />
      <description><![CDATA[Could one water droplet separate from the rest? Can it go its own way?<br/><br/>This station is {command:1:Clapham North}.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Clapham North to Stockwell)
        </script>
      </command>
    </object>
    <object name="Act 0 Clapham North to Stockwell">
      <inherit name="editor_room" />
      <description><![CDATA[On the train from Clapham North to Stockwell.<br/><br/>We have arrived.<br/><br/>I suppose I could {command:1:stay on this train}, or I could {command:2:get on the Victoria line} instead if I wanted to.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Stockwell to Oval)
        </script>
      </command>
      <command>
        <pattern>2</pattern>
        <script>
          MoveObject (player, Act 0 Stockwell Escape)
        </script>
      </command>
    </object>
    <object name="Act 0 Stockwell to Oval">
      <inherit name="editor_room" />
      <description><![CDATA[Stayed on train, now at Oval<br/><br/>{command:1:Continue to Kennington}]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Oval to Kennington)
        </script>
      </command>
    </object>
    <object name="Act 0 Oval to Kennington">
      <inherit name="editor_room" />
      <description><![CDATA[On train from Oval to Kennington.<br/><br/>We have arrived.<br/><br/>I could {command:1:stay on the train} or {command:2:change to the Charing Cross branch}.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Kennington to Elephant)
        </script>
      </command>
      <command>
        <pattern>2</pattern>
        <script>
          MoveObject (player, Act 0 Kennington Escape)
        </script>
      </command>
    </object>
    <object name="Act 0 Kennington to Elephant">
      <inherit name="editor_room" />
      <description><![CDATA[So I stay on the train, and travel to Elephant & Castle.<br/><br/>We have arrived.<br/><br/>I could {command:1:stay on the train} or I could {command:2:change to the Bakerloo line}.]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Elephant to Borough)
        </script>
      </command>
      <command>
        <pattern>2</pattern>
        <script>
          MoveObject (player, Act 0 Elephant Escape)
        </script>
      </command>
    </object>
    <object name="Act 0 Elephant to Borough">
      <inherit name="editor_room" />
      <description><![CDATA[Stayed on the train, now we're travelling to Borough.<br/><br/>We are here.<br/><br/>Continue to {command:1:London Bridge}]]></description>
      <command>
        <pattern>1</pattern>
        <script>
          MoveObject (player, Act 0 Borough to London Bridge)
        </script>
      </command>
    </object>
    <object name="Act 0 Borough to London Bridge">
      <inherit name="editor_room" />
      <description>At London Bridge</description>
      <enter type="script">
        EndAct0 (-1, London Bridge, Jubilee)
      </enter>
    </object>
    <object name="Act 0 Stockwell Escape">
      <inherit name="editor_room" />
      <enter type="script">
        EndAct0 (-1, Stockwell, VictoriaLine)
      </enter>
    </object>
    <object name="Act 0 Kennington Escape">
      <inherit name="editor_room" />
      <enter type="script">
        EndAct0 (-1, Kennington, Northern2)
      </enter>
    </object>
    <object name="Act 0 Elephant Escape">
      <inherit name="editor_room" />
      <enter type="script">
        EndAct0 (-1, Elephant Castle, Bakerloo)
      </enter>
    </object>
  </object>
  <object name="platform">
    <platformname>Central (westbound)</platformname>
    <directions type="stringdictionary">
      <item>
        <key>central</key>
        <value>-1</value>
      </item>
    </directions>
    <location type="object">Chancery Lane</location>
    <enter type="script"><![CDATA[
      availablelist = ""
      foreach (availableplatform, platform.location.platforms) {
        platformdata = DictionaryItem(platform.location.platforms, availableplatform)
        platformname = DictionaryItem(platformdata, "name")
        if (platformname <> platform.platformname) {
          if (LengthOf(availablelist) > 0) {
            availablelist = availablelist + ", "
          }
          availablelist = availablelist + ("{command:change " + availableplatform + ":" + availableplatform + "}")
        }
        else {
          msg ("We are now on the " + platformname + " platform at " + GetDisplayAlias(platform.location))
        }
      }
      if (LengthOf(availablelist) > 0) {
        msg ("Changes: " + availablelist)
      }
      msg ("{command:next:Wait for a train here}")
    ]]></enter>
    <lines type="objectlist">Central</lines>
    <command>
      <pattern>board</pattern>
      <script>
        player.parent = train
        InitTrain
        // TO DO: Train counter will be incremented now from 0 to 1 even though we haven't waited on the train yet.
        // So will prob want to set counter to -1 here.
      </script>
    </command>
    <command>
      <pattern>next</pattern>
      <script>
        train.line = ObjectListItem(platform.lines, GetRandomInt(0, ListCount(platform.lines) - 1))
        train.location = platform.location
        train.direction = ToInt(StringDictionaryItem(platform.directions, train.line.code))
        msg ("A " + train.line.name + " train arrives. {command:board:Board}")
      </script>
    </command>
    <command>
      <pattern>change #text_platform#</pattern>
      <script>
        foreach (availableplatform, platform.location.platforms) {
          if (availableplatform = text_platform) {
            MoveToPlatform (platform.location, DictionaryItem(platform.location.platforms, availableplatform))
            invoke (platform.enter)
          }
        }
      </script>
    </command>
  </object>
  <object name="train">
    <direction type="int">-1</direction>
    <location type="object">Chancery Lane</location>
    <line type="object">Central</line>
    <counter type="int">0</counter>
    <command>
      <pattern>unboard</pattern>
      <script><![CDATA[
        platform = GetPlatform(train.location, train.line, train.direction)
        if (platform = null) {
          // we're at the end of the line
          availablelist = ""
          foreach (availableplatform, train.location.platforms) {
            platformdata = DictionaryItem(train.location.platforms, availableplatform)
            if (LengthOf(availablelist) > 0) {
              availablelist = availablelist + ", "
            }
            availablelist = availablelist + ("{command:change " + availableplatform + ":" + availableplatform + "}")
          }
          msg ("Changes: " + availablelist)
        }
        else {
          MoveToPlatform (train.location, platform)
        }
      ]]></script>
    </command>
    <command>
      <pattern>change #text_platform#</pattern>
      <script>
        // this version is only used for the end of the line
        foreach (availableplatform, train.location.platforms) {
          if (availableplatform = text_platform) {
            MoveToPlatform (train.location, DictionaryItem(train.location.platforms, availableplatform))
          }
        }
      </script>
    </command>
    <command>
      <pattern>interact #object#</pattern>
      <script>
        msg (object.desc)
      </script>
    </command>
    <turnscript>
      <enabled />
      <script>
        train.counter = train.counter + 1
        if (train.counter = train.nextstopcount) {
          MoveTrainToNextStation
        }
      </script>
    </turnscript>
  </object>
  <function name="MoveToPlatform" parameters="location, platformdata">
    platform.location = location
    platform.lines = DictionaryItem(platformdata, "lines")
    platform.directions = DictionaryItem(platformdata, "directions")
    platform.platformname = DictionaryItem(platformdata, "name")
    player.parent = platform
  </function>
  <function name="GetPlatform" parameters="location, line, direction" type="dictionary">
    value = null
    directionstring = ToString(direction)
    foreach (platform, location.platforms) {
      platformdata = DictionaryItem(location.platforms, platform)
      lines = DictionaryItem(platformdata, "lines")
      directions = DictionaryItem(platformdata, "directions")
      if (ListContains(lines, line)) {
        platformdirection = DictionaryItem(directions, line.code)
        if (directionstring = platformdirection) {
          value = platformdata
        }
      }
    }
    return (value)
  </function>
  <function name="GetNextStation" parameters="location, direction, linecode" type="object">
    nextlocationcode = GetInt(location, linecode) + direction
    return (GetStation(linecode, nextlocationcode))
  </function>
  <function name="GetStation" parameters="line, code" type="object">
    result = null
    foreach (station, GetDirectChildren(stationdata)) {
      if (GetInt(station, line) = code) {
        result = station
      }
    }
    return (result)
  </function>
  <function name="GetInterchanges" type="objectlist"><![CDATA[
    result = NewObjectList()
    foreach (line, GetDirectChildren(linedata)) {
      if (line <> train.line and HasInt(train.location, line.code)) {
        list add (result, line)
      }
    }
    return (result)
  ]]></function>
  <function name="GetPlatformName" parameters="line, direction" type="string">
    if (line = Circle) {
      // TO DO: Add "via"
      up = "clockwise"
      down = "anticlockwise"
    }
    else {
      up = line.up
      down = line.down
    }
    if (direction = -1) {
      bound = down
    }
    else {
      bound = up
    }
    return (GetDisplayAlias(line) + " (" + bound + ")")
  </function>
  <function name="EndAct0" parameters="direction, location, line">
    JS.EndOutputSection ("act01")
    JS.HideOutputSection ("act01")
    train.direction = direction
    train.location = location
    train.line = line
    SetTimeout (1) {
      ClearScreen
      JS.StartOutputSection ("act1")
      InitTrain
    }
  </function>
  <function name="MoveTrainToNextStation">
  next = GetNextStation(train.location, train.direction, train.line.code)
  if (next = null) {
    msg ("End of the line")
  }
  else {
    train.location = next
    train.nextstopcount = 3
    train.counter = 0
    InitTrainAtStation
  }
  </function>
  <function name="InitTrain">
    SetUpTrain
    player.parent = train
    train.nextstopcount = 3
    train.counter = 0
    InitTrainAtStation
    msg (TrainObjectList("I can see", GetNonTransparentParent(game.pov.parent), "and", "."))
  </function>
  <function name="InitTrainAtStation">
    msg ("We are now at " + GetDisplayAlias(train.location))
    next = GetNextStation(train.location, train.direction, train.line.code)
    if (next = null) {
      msg ("End of the line. {command:unboard:Get off the train}")
    }
    else {
      msg ("{command:wait:Stay on the train} or {command:unboard:Get off the train}")
    }
  </function>
  <function name="SetUpTrain">
  <![CDATA[
    foreach (obj, GetDirectChildren(train)) {
      if (obj <> player) {
        // TO DO: Only move train items back into unseenpeople if we haven't looked at them
        obj.parent = unseenpeople
      }
    }
    passengers = RandomObjectListItems(GetDirectChildren(unseenpeople), 2)
    foreach (obj, passengers) {
      Log ("move " + obj.name)
      obj.parent = train
    }
  ]]>
  </function>
  <function name="RandomObjectListItems" parameters="list, items" type="objectlist">
  <![CDATA[
    if (items >= ListCount(list)) {
      Log ("requested more items than were in list")
      return (list)
    }
    else {
      result = NewObjectList()
      while (ListCount(result) < items) {
        index = GetRandomInt(0, ListCount(list) - 1)
        item = ObjectListItem(list, index)
        if (not ListContains(result, item)) {
          list add (result, item)
        }
      }
    }
    return (result)
  ]]>
  </function>
  <function name="TrainObjectList" type="string" parameters="preList, parent, preFinal, postList">
    <![CDATA[
    result = ""
    count = 0
    list = RemoveSceneryObjects(GetDirectChildren(parent))
    listLength = ListCount(list)
    foreach (item, list) {
      if (LengthOf(result) = 0) result = preList + " "
      verbs = GetDisplayVerbs(item)
      result = result + "{command:interact " + item.name + ":" + item.title + "}"
      count = count + 1
      if (count = listLength - 1) {
        result = result + " " + preFinal + " "
      }
      else if (count < listLength) {
        result = result + ", "
      }
      else {
        result = result + postList
      }
    }
    return (result)
  ]]>
  </function>
</asl>